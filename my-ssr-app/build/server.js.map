{
  "version": 3,
  "sources": ["../server/server.jsx", "../src/App.jsx"],
  "sourcesContent": ["import fs from \"fs\";\r\nimport express from \"express\";\r\nimport React from \"react\";\r\nimport ReactDOMServer from \"react-dom/server\";\r\nimport App from \"../src/App.jsx\";\r\n\r\nconst path = require(\"path\");\r\nconst __dirname = __dirname;\r\n\r\nconst PORT = process.env.PORT || 3000;\r\nconst app = express();\r\n\r\napp.use(express.static(path.resolve(__dirname, \"../dist\"), { maxAge: \"30d\" }));\r\n\r\napp.get(\"/\", async (req, res) => {\r\n  try {\r\n    const response = await fetch(\"https://jsonplaceholder.typicode.com/todos\");\r\n    const todos = await response.json();\r\n    const appHtml = ReactDOMServer.renderToString(<App todos={todos.slice(0, 10)} />);\r\n\r\n    const templateFile = path.resolve(__dirname, \"../index.html\");\r\n    fs.readFile(templateFile, \"utf8\", (err, htmlTemplate) => {\r\n      if (err) {\r\n        console.error(\"Erreur lecture index.html :\", err);\r\n        return res.status(500).send(\"Erreur serveur\");\r\n      }\r\n\r\n      const finalHtml = htmlTemplate\r\n        .replace('<div id=\"root\"></div>', `<div id=\"root\">${appHtml}</div>`)\r\n        .replace(\r\n          \"</body>\",\r\n          `<script>window.__INITIAL_DATA__ = ${JSON.stringify(todos.slice(0, 10))}</script></body>`\r\n        );\r\n\r\n      res.setHeader(\"Content-Type\", \"text/html; charset=utf-8\");\r\n      res.send(finalHtml);\r\n    });\r\n  } catch (error) {\r\n    console.error(error);\r\n    res.status(500).send(\"Erreur API\");\r\n  }\r\n});\r\n\r\napp.listen(PORT, () => {\r\n  console.log(`Serveur lanc\u00E9 sur http://localhost:${PORT}`);\r\n});\r\n", "import React from \"react\";\n\nexport default function App({ todos }) {\n  return (\n    <div>\n      <h1>Liste des t\u00E2ches</h1>\n      <ul>\n        {todos.map(todo => (\n          <li key={todo.id}>\n            {todo.title} {todo.completed ? \"completed\" : \"NOT completed\"}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA,gBAAe;AACf,qBAAoB;AACpB,IAAAA,gBAAkB;AAClB,oBAA2B;;;ACH3B,mBAAkB;AAEH,SAAR,IAAqB,EAAE,MAAM,GAAG;AACrC,SACE,6BAAAC,QAAA,cAAC,aACC,6BAAAA,QAAA,cAAC,YAAG,qBAAgB,GACpB,6BAAAA,QAAA,cAAC,YACE,MAAM,IAAI,UACT,6BAAAA,QAAA,cAAC,QAAG,KAAK,KAAK,MACX,KAAK,OAAM,KAAE,KAAK,YAAY,cAAc,eAC/C,CACD,CACH,CACF;AAEJ;;;ADTA,IAAM,OAAO,QAAQ,MAAM;AAC3B,IAAM,YAAY;AAElB,IAAM,OAAO,QAAQ,IAAI,QAAQ;AACjC,IAAM,UAAM,eAAAC,SAAQ;AAEpB,IAAI,IAAI,eAAAA,QAAQ,OAAO,KAAK,QAAQ,WAAW,SAAS,GAAG,EAAE,QAAQ,MAAM,CAAC,CAAC;AAE7E,IAAI,IAAI,KAAK,OAAO,KAAK,QAAQ;AAC/B,MAAI;AACF,UAAM,WAAW,MAAM,MAAM,4CAA4C;AACzE,UAAM,QAAQ,MAAM,SAAS,KAAK;AAClC,UAAM,UAAU,cAAAC,QAAe,eAAe,8BAAAC,QAAA,cAAC,OAAI,OAAO,MAAM,MAAM,GAAG,EAAE,GAAG,CAAE;AAEhF,UAAM,eAAe,KAAK,QAAQ,WAAW,eAAe;AAC5D,cAAAC,QAAG,SAAS,cAAc,QAAQ,CAAC,KAAK,iBAAiB;AACvD,UAAI,KAAK;AACP,gBAAQ,MAAM,+BAA+B,GAAG;AAChD,eAAO,IAAI,OAAO,GAAG,EAAE,KAAK,gBAAgB;AAAA,MAC9C;AAEA,YAAM,YAAY,aACf,QAAQ,yBAAyB,kBAAkB,OAAO,QAAQ,EAClE;AAAA,QACC;AAAA,QACA,qCAAqC,KAAK,UAAU,MAAM,MAAM,GAAG,EAAE,CAAC,CAAC;AAAA,MACzE;AAEF,UAAI,UAAU,gBAAgB,0BAA0B;AACxD,UAAI,KAAK,SAAS;AAAA,IACpB,CAAC;AAAA,EACH,SAAS,OAAO;AACd,YAAQ,MAAM,KAAK;AACnB,QAAI,OAAO,GAAG,EAAE,KAAK,YAAY;AAAA,EACnC;AACF,CAAC;AAED,IAAI,OAAO,MAAM,MAAM;AACrB,UAAQ,IAAI,yCAAsC,IAAI,EAAE;AAC1D,CAAC;",
  "names": ["import_react", "React", "express", "ReactDOMServer", "React", "fs"]
}
